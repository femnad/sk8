---
- hosts: localhost
  tasks:
    - name: cpn ip
      shell: dig cpn.fcd.dev A +nocomments +noquestion +nocmd +nostats | awk '{print $NF}'
      register: cpn_ip

    - name: nod ip
      shell: dig nod.fcd.dev A +nocomments +noquestion +nocmd +nostats | awk '{print $NF}'
      register: nod_ip

    # remove host keys for IPs of previous instances
    - name: remove known ips
      lineinfile:
        path: '{{ ansible_user_dir }}/.ssh/known_hosts'
        regexp: '^{{ ip }} .*'
        state: absent
      loop: ['{{ cpn_ip.stdout }}', '{{ nod_ip.stdout }}']
      loop_control:
        loop_var: ip
      delegate_to: localhost

    - name: remove known hosts
      known_hosts:
        name: '{{ host }}.fcd.dev'
        state: absent
      loop: [cpn, nod]
      loop_control:
        loop_var: host
      tags: redo

    - name: add known hosts
      shell: ssh-keyscan {{ host }}.fcd.dev | grep ecdsa-sha2-nistp256 >> {{ ansible_user_dir }}/.ssh/known_hosts
      loop: [cpn, nod]
      loop_control:
        loop_var: host
      tags: redo

- hosts: k8s

  tasks:
    - name: Download kubeadm, kubectl, kubelet
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/{{ binary }}
        dest: /usr/local/bin
        mode: 0755
      loop_control:
        loop_var: binary
      loop:
        - kubeadm
        - kubectl
        - kubelet
      become: yes

    - name: docker key
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution.lower() }}/gpg
      become: yes

    - name: docker repo
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution.lower() }} {{ ansible_lsb.codename }} stable
      become: yes

    - name: docker install
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      become: yes

    - name: docker config
      copy:
        src: docker-daemon.json
        dest: /etc/docker/daemon.json
      notify: docker-restart
      become: yes

    - meta: flush_handlers

    - name: apt upgrade
      apt:
        upgrade: full
        update_cache: yes
      become: yes
      when: ansible_os_family == 'Debian'

    - name: check reboot needed
      stat:
        path: /var/run/reboot-required
      register: reboot_required
      when: ansible_distribution == 'Ubuntu'

    - name: reboot
      reboot:
      become: yes
      register: reboot_stats
      when: reboot_required.stat.exists

    - name: reboot information
      debug:
        var: reboot_stats
      when: reboot_required.stat.exists

    - name: reqs
      package:
        name:
          - conntrack
          - ethtool
          - fish
          - iputils-ping
          - ranger
          - screen
          - socat
          - tmux
          - vim
      become: yes

    - name: kubelet service
      copy:
        src: kubelet.service
        dest: /etc/systemd/system/kubelet.service
      become: yes

    - name: kubelet drop-in dir
      file:
        path: /etc/systemd/system/kubelet.service.d/
        state: directory
      become: yes

    - name: kubelet drop-in
      copy:
        src: kubeadm.conf
        dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      become: yes

    - name: enable kubelet
      systemd:
        daemon_reload: yes
        name: kubelet
        enabled: yes
      become: yes

    - name: user bin
      file:
        path: '{{ ansible_user_dir }}/bin'
        state: directory

    - name: chezmoi
      unarchive:
        src: https://github.com/twpayne/chezmoi/releases/download/v1.8.5/chezmoi_1.8.5_linux_amd64.tar.gz
        dest: '{{ ansible_user_dir }}/bin'
        mode: 0755
        remote_src: yes

    - name: chezmoi init
      command: '{{ ansible_user_dir }}/bin/chezmoi init https://gitlab.com/femnad/chezmoi.git'

    - name: chezmoi pull
      git:
        repo: https://gitlab.com/femnad/chezmoi.git
        dest: '{{ ansible_user_dir }}/.local/share/chezmoi'

    - name: chezmoi apply
      command: '{{ ansible_user_dir }}/bin/chezmoi apply'

    - name: purge config
      file:
        path: /etc/kubernetes
        state: absent
      become: yes

    - name: stop kubelet
      systemd:
        name: kubelet
        state: stopped
      become: yes

  handlers:
    - name: kubelet-restart
      systemd:
        name: kubelet
        state: restarted
        daemon_reload: yes
      become: yes

    - name: docker-restart
      systemd:
        name: docker
        state: restarted
      become: yes

- hosts: cpn

  tasks:
    - name: kubeadm init --pod-network-cidr=192.168.0.0/16
      shell: kubeadm init > {{ ansible_user_dir }}/kubeadm.log
      become: yes

    - name: kube config dir
      file:
        path: '{{ ansible_user_dir }}/.kube'
        state: directory

    - name: kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: '{{ ansible_user_dir }}/.kube/config'
        remote_src: yes
      become: yes

    - name: calico config
      get_url:
        url: https://docs.projectcalico.org/manifests/calico.yaml
        dest: '{{ ansible_user_dir }}'

    - name: install calico
      command: kubectl apply -f calico.yaml

    - name: join token
      shell: tail -n 2 {{ ansible_user_dir }}/kubeadm.log | tr -d '\n' | sed -e 's/\\\    //' -e 's/ $//'
      register: join_cmd_out

    - name: token holder
      add_host:
        name: token_holder
        join_cmd: '{{ join_cmd_out.stdout }}'

- hosts: nod

  tasks:
    - name: kubeadm join
      command: "{{ hostvars['token_holder']['join_cmd'] }}"
      become: yes

- hosts: cpn

  tasks:
    - name: local kubeconfig
      file:
        path: '{{ ansible_user_dir }}/.kube'
        state: directory
      delegate_to: localhost

    - name: fetch kubeconfig
      fetch:
        flat: yes
        src: '{{ ansible_user_dir }}/.kube/config'
        dest: '{{ ansible_user_dir }}/.kube/config'

    - name: change server
      replace:
        path: '{{ ansible_user_dir }}/.kube/config'
        regexp: https://[0-9.]+:6443
        replace: https://k8s-cpn:6443
      delegate_to: localhost

    - name: cpn ip hosts
      shell: dig cpn.fcd.dev A +nocomments +noquestion +nocmd +nostats | awk '{print $NF}'
      register: cpn_ip
      delegate_to: localhost

    - name: hosts entry
      lineinfile:
        path: /etc/hosts
        line: '{{ cpn_ip.stdout }} k8s-cpn'
      become: yes
      delegate_to: localhost
...
